# Generated by Django 2.1.7 on 2019-03-27 08:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AfterComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentid', models.CharField(max_length=100, verbose_name='评论人ID')),
                ('content', models.TextField(verbose_name='追评内容')),
            ],
            options={
                'verbose_name': '追评',
                'verbose_name_plural': '追评',
                'db_table': 'aftercomment',
            },
        ),
        migrations.CreateModel(
            name='CommentItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(blank=True, max_length=100, verbose_name='评论用户id')),
                ('content', models.TextField(blank=True, verbose_name='评论内容')),
                ('creationTime', models.CharField(blank=True, max_length=100, verbose_name='评论时间')),
                ('days', models.IntegerField(blank=True, verbose_name='已评论参数')),
                ('firstCategory', models.IntegerField(blank=True, verbose_name='第一级分类')),
                ('imageCount', models.SmallIntegerField(blank=True, null=True, verbose_name='评论图片数量')),
                ('nickname', models.CharField(blank=True, max_length=100, verbose_name='用户名')),
                ('productColor', models.CharField(blank=True, max_length=100, verbose_name='产品颜色')),
                ('productSize', models.CharField(blank=True, max_length=100, verbose_name='产品型号')),
                ('referenceId', models.CharField(blank=True, max_length=100, verbose_name='产品总id')),
                ('referenceName', models.CharField(blank=True, max_length=100, verbose_name='产品描述')),
                ('score', models.IntegerField(blank=True, verbose_name='评分')),
                ('secondCategory', models.IntegerField(blank=True, verbose_name='第二级分类')),
                ('thirdCategory', models.IntegerField(blank=True, verbose_name='第三级分类')),
                ('userLevelId', models.CharField(blank=True, max_length=100, verbose_name='用户等级id')),
                ('userLevelName', models.CharField(blank=True, max_length=100, verbose_name='用户等级名称')),
            ],
            options={
                'verbose_name': '评论详情',
                'verbose_name_plural': '评论详情',
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='CommentSummaryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('afterCount', models.IntegerField(blank=True, verbose_name='追加评论')),
                ('averageScore', models.IntegerField(blank=True, verbose_name='平均评分')),
                ('commentCount', models.IntegerField(blank=True, verbose_name='评分总人数')),
                ('defaultGoodCount', models.IntegerField(blank=True, verbose_name='默认好评')),
                ('generalCount', models.IntegerField(blank=True, verbose_name='中评总人数')),
                ('generalRate', models.FloatField(blank=True, verbose_name='中评比率')),
                ('goodCount', models.IntegerField(blank=True, verbose_name='好评人数')),
                ('goodRate', models.FloatField(blank=True, max_length=100, verbose_name='好评比率')),
                ('imageListCount', models.IntegerField(blank=True, verbose_name='晒图评论人数')),
                ('poorCount', models.IntegerField(blank=True, verbose_name='差评人数')),
                ('poorRate', models.FloatField(blank=True, max_length=100, verbose_name='差评比率')),
                ('score', models.IntegerField(blank=True, verbose_name='评论等级')),
            ],
            options={
                'verbose_name': '评论总详情',
                'verbose_name_plural': '评论总详情',
                'db_table': 'commentsummary',
            },
        ),
        migrations.CreateModel(
            name='HotCommentTagItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id', models.CharField(blank=True, max_length=100, verbose_name='id')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='名字')),
                ('count', models.CharField(blank=True, max_length=100, verbose_name='数量')),
                ('type', models.CharField(blank=True, max_length=100, verbose_name='类型')),
            ],
            options={
                'verbose_name': '热评',
                'verbose_name_plural': '热评',
                'db_table': 'hotcomment',
            },
        ),
        migrations.CreateModel(
            name='ProductsItem',
            fields=[
                ('productid', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='产品id')),
                ('category', models.CharField(blank=True, max_length=50, verbose_name='产品分类名')),
                ('description', models.TextField(blank=True, verbose_name='产品描述')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='产品名称')),
                ('imgurl', models.CharField(max_length=300, verbose_name='封面地址')),
                ('reallyPrice', models.FloatField(blank=True, verbose_name='当前价格')),
                ('url', models.URLField(blank=True, verbose_name='商品地址')),
            ],
            options={
                'verbose_name': '商品信息',
                'verbose_name_plural': '商品信息',
                'db_table': 'product',
            },
        ),
        migrations.AddField(
            model_name='hotcommenttagitem',
            name='productId',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='taobao.ProductsItem'),
        ),
        migrations.AddField(
            model_name='commentsummaryitem',
            name='productid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taobao.ProductsItem'),
        ),
        migrations.AddField(
            model_name='commentitem',
            name='productId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taobao.ProductsItem'),
        ),
        migrations.AddField(
            model_name='aftercomment',
            name='product_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taobao.ProductsItem'),
        ),
    ]
